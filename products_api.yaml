openapi: 3.0.1
info:
  title: Order API
  version: '2.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /products:
    get:
      summary: GET Products based on type
      parameters:
        - name: type
          in: query
          schema:
            type: string
            enum:
              - gadget
              - book
              - food
              - other
          examples:
            GET_PRODUCTS:
              value: 'gadget'
      responses:
        "200":
          description: List of products in the response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                GET_PRODUCTS:
                  value:
                    - id: 1
                      name: 'XYZ Phone'
                      type: 'gadget'
                      inventory: 2
                      cost: 2000
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
    post:
      summary: POST /products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDetails'
            examples:
              CREATE_PRODUCT:
                value:
                  name: iPhone
                  type: gadget
                  inventory: 100
                  cost: 2000
      responses:
        "201":
          description: POST /products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductId'
              examples:
                CREATE_PRODUCT:
                  value:
                    id: 1
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'

components:
  schemas:
    ProductDetails:
      title: Product Details
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/ProductType'
        inventory:
          type: integer
        cost:
          type: integer
      required:
        - name
        - type
        - inventory
        - cost
    ProductType:
      type: string
      title: Product Type
      enum:
        - book
        - food
        - gadget
        - other
    ProductId:
      title: Product Id
      type: object
      properties:
        id:
          type: integer
      required:
        - id
    Product:
      title: Product
      allOf:
        - $ref: '#/components/schemas/ProductId'
        - $ref: '#/components/schemas/ProductDetails'
    ErrorResponseBody:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        error:
          type: string
        path:
          type: string
